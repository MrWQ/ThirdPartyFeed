<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title type="text">SecIN信息安全技术社区</title>
  <link href="https://raw.githubusercontent.com/p7e4/ThirdPartyFeed/main/feed/sec-in.com.xml" rel="self"/>
  <link rel="alternate" href="https://sec-in.com/"/>
  <updated>2023-04-07T06:12:52+08:00</updated>
  <id>https://sec-in.com/</id>
  <entry>
    <title type="text">绕过认证的五种方式</title>
    <link rel="alternate" type="text/html" href="https://sec-in.com/article/2168"/>
    <id>https://sec-in.com/article/2168</id>
    <published>2023-04-06T16:23:12+08:00</published>
    <summary type="text">
      认证绕过漏洞是现在 Web 应用中存在的常见缺陷，但它们并不总是那么容易被发现。随着技术的不断发展，各式各样的平台整合，传统的身份验证方法正在逐渐减少，新的验证方式不仅为用户使用提供了便
    </summary>
  </entry>
  <entry>
    <title type="text">浅谈SpringSecurity与CVE-2023-22602</title>
    <link rel="alternate" type="text/html" href="https://sec-in.com/article/1723"/>
    <id>https://sec-in.com/article/1723</id>
    <published>2023-04-06T16:21:45+08:00</published>
    <summary type="text">
      SpringSecurity某种条件下是基于Ant进行匹配，而高版本的Spring使用的是PathPatternParser，利用解析的差异在某些条件下可能会存在绕过鉴权的风险。
    </summary>
  </entry>
  <entry>
    <title type="text">浅谈Apache与CVE-2023-20860</title>
    <link rel="alternate" type="text/html" href="https://sec-in.com/article/2166"/>
    <id>https://sec-in.com/article/2166</id>
    <published>2023-04-06T16:20:28+08:00</published>
    <summary type="text">
      Apache Shiro是常用的一个鉴权框架，其会根据URL路径匹配，解析出ServletRequest请求过程中要执行的过滤器链。本文主要分享其中的一个auth Bypas场景。
    </summary>
  </entry>
  <entry>
    <title type="text">浅谈Spring actuator env endpoint的一个误区</title>
    <link rel="alternate" type="text/html" href="https://sec-in.com/article/2159"/>
    <id>https://sec-in.com/article/2159</id>
    <published>2023-04-06T16:19:42+08:00</published>
    <summary type="text">
      在actuator 1.x中某些场景中，很多时候大家都认为endpoints.env.enabled=false后就env POST端点就没有暴露出去了，实际上并不能规避风险。
    </summary>
  </entry>
  <entry>
    <title type="text">Linux&amp;Windows应急响应+案例分析</title>
    <link rel="alternate" type="text/html" href="https://sec-in.com/article/2161"/>
    <id>https://sec-in.com/article/2161</id>
    <published>2023-04-04T13:50:18+08:00</published>
    <summary type="text">
      一些Linux&amp;Windows应急响应的思路和防护措施，并且后面有详细的案例解析。若是有需要就来看看吧
    </summary>
  </entry>
  <entry>
    <title type="text">Metasploitable2笔记(漏洞利用与加固)</title>
    <link rel="alternate" type="text/html" href="https://sec-in.com/article/2160"/>
    <id>https://sec-in.com/article/2160</id>
    <published>2023-04-04T11:30:40+08:00</published>
    <summary type="text">
      渗透基础,还有漏洞原理与加固!非常推荐刚刚入门的师傅们观看学习一下, 大佬师傅们勿喷哈哈哈 如果有错误希望能够帮我指正指正
    </summary>
  </entry>
  <entry>
    <title type="text">那些年挖过的接口漏洞</title>
    <link rel="alternate" type="text/html" href="https://sec-in.com/article/2157"/>
    <id>https://sec-in.com/article/2157</id>
    <published>2023-03-24T14:03:43+08:00</published>
    <summary type="text">
      记录那些年挖过的接口类的漏洞，包括常见前端js，springboot系列，druid未授权访问以及spring和shiro权限绕过等实战案例
    </summary>
  </entry>
  <entry>
    <title type="text">与AI沟通学习恶意软件分析技术V1.0</title>
    <link rel="alternate" type="text/html" href="https://sec-in.com/article/2156"/>
    <id>https://sec-in.com/article/2156</id>
    <published>2023-03-15T18:02:42+08:00</published>
    <summary type="text">
      与AI沟通学习病毒分析技术，并将搜索的资料进行备份汇总
版本：V1.0
基础概念、工具技巧、分析平台
    </summary>
  </entry>
  <entry>
    <title type="text">Hotel Druid反弹shell到权限提升</title>
    <link rel="alternate" type="text/html" href="https://sec-in.com/article/2151"/>
    <id>https://sec-in.com/article/2151</id>
    <published>2023-03-15T17:44:29+08:00</published>
    <summary type="text">
      Hotel Druid反弹shell到权限提升
通过信息收集——发现22&amp;80端口开启——查找Hotel Druid历史漏洞——反弹shell（途中踩坑，学到新东西）——提权（意外收获）
    </summary>
  </entry>
  <entry>
    <title type="text">记一次”大汗淋漓”后的SRC漏洞挖掘</title>
    <link rel="alternate" type="text/html" href="https://sec-in.com/article/2152"/>
    <id>https://sec-in.com/article/2152</id>
    <published>2023-03-15T17:41:42+08:00</published>
    <summary type="text">
      工作闲暇之余，在一次&quot;大汗淋漓&quot;后开始的SRC漏洞挖掘，全程无亮点，主要还是工具牛的，ARL yyds
    </summary>
  </entry>

</feed>
