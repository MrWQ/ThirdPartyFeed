<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title type="text">SecIN信息安全技术社区</title>
  <link href="https://raw.githubusercontent.com/p7e4/ThirdPartyFeed/main/feed/sec-in.com.xml" rel="self"/>
  <link rel="alternate" href="https://sec-in.com/"/>
  <updated>2022-12-10T18:15:38+08:00</updated>
  <id>https://sec-in.com/</id>
  <entry>
    <title type="text">2022 Yapi 命令执行漏洞</title>
    <link rel="alternate" type="text/html" href="https://sec-in.com/article/2037"/>
    <id>https://sec-in.com/article/2037</id>
    <published>2022-12-09T17:18:24+08:00</published>
    <summary type="text">
      YAPI接口管理平台是国内某旅行网站的大前端技术中心开源项
目，为前端后台开发与测试人员提供更优雅的接口管理服务，该系统被国内较多知名互联网企业所采
用。 yapi 存在命令执行漏洞
    </summary>
  </entry>
  <entry>
    <title type="text">浅谈在CTF题中三种MD5比较</title>
    <link rel="alternate" type="text/html" href="https://sec-in.com/article/2033"/>
    <id>https://sec-in.com/article/2033</id>
    <published>2022-12-06T16:52:53+08:00</published>
    <summary type="text">
      该文结合题目总结了部分有关md5基础的题目，过程还算详细，如有不足，还希望师傅指出，谢谢各位师傅的支持！
    </summary>
  </entry>
  <entry>
    <title type="text">文件上传漏洞总结</title>
    <link rel="alternate" type="text/html" href="https://sec-in.com/article/2036"/>
    <id>https://sec-in.com/article/2036</id>
    <published>2022-12-06T16:15:03+08:00</published>
    <summary type="text">
      做了一次文件上传漏洞的总结，靶场是upload_labs，写这个也花了我不少的精力，希望能帮助到大家
    </summary>
  </entry>
  <entry>
    <title type="text">网鼎杯ezjava利用分析</title>
    <link rel="alternate" type="text/html" href="https://sec-in.com/article/2042"/>
    <id>https://sec-in.com/article/2042</id>
    <published>2022-12-06T16:12:49+08:00</published>
    <summary type="text">
      通过网鼎杯ezjava题目解法了解tomcat解析不一致路由绕过以及分析如何利用fastjson包构造gadget打原生反序列化。
    </summary>
  </entry>
  <entry>
    <title type="text">VMWare Workspace ONE Access Auth Bypass</title>
    <link rel="alternate" type="text/html" href="https://sec-in.com/article/2034"/>
    <id>https://sec-in.com/article/2034</id>
    <published>2022-12-06T15:19:36+08:00</published>
    <summary type="text">
      单点登录（SSO）是目前的主流认证方案，其大致原理是身份提供者（IdP）。他们的作用是执行凭证验证，并提供一个签名的令牌，服务提供者（SP）可以使用该令牌进行访问控制。然后引出了作者对OAuth2的认
    </summary>
  </entry>
  <entry>
    <title type="text">从KCON2022议题来看fastjson新版本RCE</title>
    <link rel="alternate" type="text/html" href="https://sec-in.com/article/2017"/>
    <id>https://sec-in.com/article/2017</id>
    <published>2022-12-06T15:18:05+08:00</published>
    <summary type="text">
      fastjson1.2.80版本的不同于前面版本的漏洞，其中巧妙性的使用JSON.toJavaObject方法进行POC的构造，使用java.lang.Exception将其加入期望类
    </summary>
  </entry>
  <entry>
    <title type="text">一次客户授权的系统测试</title>
    <link rel="alternate" type="text/html" href="https://sec-in.com/article/2025"/>
    <id>https://sec-in.com/article/2025</id>
    <published>2022-12-06T10:57:09+08:00</published>
    <summary type="text">
      客户系统为大学系统，信息收集是一个很好的突破点，通过常规手段，信息收集—&gt;暴力破解—&gt;垂直越权、getshell—&gt;上线MSF提权拿下客户系统，可以通过本篇文章了解常规渗透思路，绕过等方法。
    </summary>
  </entry>
  <entry>
    <title type="text">缓冲区溢出漏洞那些事：验证与危害判定篇</title>
    <link rel="alternate" type="text/html" href="https://sec-in.com/article/2022"/>
    <id>https://sec-in.com/article/2022</id>
    <published>2022-12-06T10:51:56+08:00</published>
    <summary type="text">
      缓冲区溢出漏洞那些事：验证与危害判定篇
系统:kali、Windows 11
工具：x64dbg、ERC.Xdbg插件、python、msfvenom、ncat、Code with Mu
    </summary>
  </entry>
  <entry>
    <title type="text">Filter内存马及工具检测</title>
    <link rel="alternate" type="text/html" href="https://sec-in.com/article/2021"/>
    <id>https://sec-in.com/article/2021</id>
    <published>2022-12-06T10:50:37+08:00</published>
    <summary type="text">
      Servlet 有自己的过滤器filter，可以通过自定义的过滤器，来对用户的请求进行拦截等操作。当我们在 filter 中添加恶意代码，就会进行命令执行。
    </summary>
  </entry>
  <entry>
    <title type="text">Listener内存马注入分析</title>
    <link rel="alternate" type="text/html" href="https://sec-in.com/article/2020"/>
    <id>https://sec-in.com/article/2020</id>
    <published>2022-12-06T10:49:40+08:00</published>
    <summary type="text">
      内存马，也被称为无文件马，是无文件攻击的一种常用手段。而无文件攻击呢顾名思义就是不利用shell文件进行攻击，但这里的无文件并不是真的意义上的“无文件”，而是一种攻击思路，是将恶意文件内容以脚本形式存
    </summary>
  </entry>

</feed>
