<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>跳跳糖 - 安全与分享社区</title>
  <link href="https://raw.githubusercontent.com/p7e4/ThirdPartyFeed/main/feed/tttang.com.xml" rel="self"/>
  <link href="https://tttang.com/"/>
  <updated>2022-03-18T21:07:57+08:00</updated>
  <id>https://tttang.com/</id>
  <entry>
    <title>DeTT&amp;amp;CT : Mapping detection to MITRE ATT&amp;amp;CK（译文）</title>
    <link href="https://tttang.com/archive/1485/"/>
    <id>https://tttang.com/archive/1485/</id>
    <published>2022-03-18T12:00:00+08:00</published>
    <summary type="text">
      &lt;p&gt;入侵检测是一项非常复杂的任务，尤其是在数据量与日俱增的情况下。跟踪这些数据源及其适当的检测规则，或避免重复的检测规则，对于检测工程师来说是一项艰巨的任务。&lt;/p&gt;
&lt;p&gt;对于SOC来说，最重要的是要对其实际能见度和检测覆盖率有一个良好的概述和清晰的理解，以便找出差距，确定新检测规则或新数据源的开发优先级。&lt;/p&gt;
    </summary>
  </entry>
  <entry>
    <title>Docker又爆出高危逃逸漏洞了？仔细研究下事情没那么简单</title>
    <link href="https://tttang.com/archive/1484/"/>
    <id>https://tttang.com/archive/1484/</id>
    <published>2022-03-17T12:00:00+08:00</published>
    <summary type="text">
      &lt;p&gt;从2019年关注的第一个容器逃逸类型的漏洞写出&lt;a href=&quot;https://mp.weixin.qq.com/s/Ttm6RtVfZz-R82AjcwhOLQ&quot; target=&quot;_blank&quot;&gt;CVE-2019-5736 runc容器逃逸漏洞分析&lt;/a&gt;后，我对容器类漏洞的敏感度一直没有降低，并且非常碎片的学习容器和云原生相关的各种原理性知识，笔记记了一大堆，乱七八糟，不成体系。&lt;/p&gt;
    </summary>
  </entry>
  <entry>
    <title>深入理解进程线程</title>
    <link href="https://tttang.com/archive/1483/"/>
    <id>https://tttang.com/archive/1483/</id>
    <published>2022-03-16T12:00:00+08:00</published>
    <summary type="text">
      
    </summary>
  </entry>
  <entry>
    <title>CVE-2022-0847 Linux内核漏洞简要分析</title>
    <link href="https://tttang.com/archive/1480/"/>
    <id>https://tttang.com/archive/1480/</id>
    <published>2022-03-15T12:00:00+08:00</published>
    <summary type="text">
      &lt;p&gt;2022年03月07日，国外安全研究员披露了一个Linux内核本地提权漏洞CVE-2022-0847，命名为“Dirtypipe”。攻击者通过利用此漏洞可进行任意可读文件重写，将普通权限用户提升到root权限。目前网上已有公开的漏洞利用工具PoC，但目前还未有对容器环境影响分析，于是就有了这篇文章。&lt;/p&gt;
    </summary>
  </entry>
  <entry>
    <title>CIS Controls VERSION 8 Acknowledgments</title>
    <link href="https://tttang.com/archive/1474/"/>
    <id>https://tttang.com/archive/1474/</id>
    <published>2022-03-15T12:00:00+08:00</published>
    <summary type="text">
      &lt;p&gt;CIS Controls®最初是一个简单的项目，旨在确定每天影响企业现实中最常见和最重要的网络攻击，将这些知识和经验转化为如何防御的行动，然后与更多人分享这些信息。最初的目标是帮助企业采取最重要的措施来保护自己免受真正重要的攻击。&lt;/p&gt;
&lt;p&gt;在互联网安全中心（CIS®）的领导下，CIS控制措施已经成熟，成为一个由志愿者个人和机构组成的国际社区。&lt;/p&gt;
&lt;p&gt;- 分享对攻击和攻击者的观察，并将其转化为防御行动&lt;/p&gt;
&lt;p&gt;- 创建和分享工具、工作辅助工具、以及采用和解决问题的案例&lt;/p&gt;
&lt;p&gt;- 将CIS Controls措施与监管和合规性框架相联系，以确保其一致性。&lt;/p&gt;
&lt;p&gt;- 识别共同的问题和障碍（如初步评估和实施路线图），并作为一个社区解决这些问题。&lt;/p&gt;
    </summary>
  </entry>
  <entry>
    <title>susctf2022 mujs利用</title>
    <link href="https://tttang.com/archive/1463/"/>
    <id>https://tttang.com/archive/1463/</id>
    <published>2022-03-14T12:00:00+08:00</published>
    <summary type="text">
      
    </summary>
  </entry>
  <entry>
    <title>Shiro后渗透拓展面</title>
    <link href="https://tttang.com/archive/1472/"/>
    <id>https://tttang.com/archive/1472/</id>
    <published>2022-03-14T12:00:00+08:00</published>
    <summary type="text">
      &lt;p&gt;在shiro利用工具之前是加了个修改key的功能，但这个功能有个遗憾，并不是在所有的中间件是通用的，也是我写shiro工具的一个遗憾吧。之后想过用深度优先算法将这个功能写进去，发现代码工程量太大了，所以不了了之。在前两天看到一个项目&lt;a href=&quot;https://github.com/whwlsfb/JDumpSpider&quot; target=&quot;_blank&quot;&gt;whwlsfb/JDumpSpider&lt;/a&gt;来的又来了灵感，本来是因为静态分析的工具，深入了解之后，发现这个实现很麻烦，无论从操作角度和实现角度来看。但这两天又看到北辰师傅写的文章&lt;a href=&quot;https://mp.weixin.qq.com/s/QCfqO2BJuhSOr58rldZzxA&quot; target=&quot;_blank&quot;&gt;从内存中Dump JDBC数据库明文密码&lt;/a&gt;，看文章中的仓库源码，发现更简单了。&lt;/p&gt;
    </summary>
  </entry>
  <entry>
    <title>从MITRE ATT&amp;amp;CK框架角度回顾2021年发生的网络入侵事件（译文）</title>
    <link href="https://tttang.com/archive/1476/"/>
    <id>https://tttang.com/archive/1476/</id>
    <published>2022-03-11T12:00:00+08:00</published>
    <summary type="text">
      &lt;p&gt;目前，时间已经来到2022年第一季度末，我们不妨花一些时间来回顾一下2021年出现的安全案例，并总结去年观察到的一些顶级战术、技术及流程（tactics, techniques and procedures，TTP）。总的来说，我们在2021年报告了20起安全事件，其中绝大多数与初始访问代理恶意软件（Trickbot、IcedID、BazarLoader等）相关，这些恶意软件通常用于入侵全域和投放勒索软件。&lt;/p&gt;
    </summary>
  </entry>
  <entry>
    <title>windows内核之池溢出(七)</title>
    <link href="https://tttang.com/archive/1466/"/>
    <id>https://tttang.com/archive/1466/</id>
    <published>2022-03-11T12:00:00+08:00</published>
    <summary type="text">
      &lt;p&gt;windows内核系列：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://tttang.com/archive/1332/&quot; target=&quot;_blank&quot;&gt;windows内核之栈溢出(一)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://tttang.com/archive/1344/&quot; target=&quot;_blank&quot;&gt;windows内核之任意地址写入(二)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://tttang.com/archive/1382/&quot; target=&quot;_blank&quot;&gt;windows内核之UAF(三)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://tttang.com/archive/1400/&quot; target=&quot;_blank&quot;&gt;windows内核之Null指针解引用(四)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://tttang.com/archive/1416/&quot; target=&quot;_blank&quot;&gt;windows内核之未初始化栈变量(五)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://tttang.com/archive/1439/&quot; target=&quot;_blank&quot;&gt;windows内核之未初始化池变量(六)&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
    </summary>
  </entry>
  <entry>
    <title>syscall的前世今生</title>
    <link href="https://tttang.com/archive/1464/"/>
    <id>https://tttang.com/archive/1464/</id>
    <published>2022-03-10T12:00:00+08:00</published>
    <summary type="text">
      &lt;p&gt;学免杀不可避免的学习syscall，虽然是几年前的技术，还是有必要学习。学习新技术之前先掌握旧技术。&lt;/p&gt;
    </summary>
  </entry>
  <entry>
    <title>K8s安全入门学习扫盲贴</title>
    <link href="https://tttang.com/archive/1465/"/>
    <id>https://tttang.com/archive/1465/</id>
    <published>2022-03-09T12:00:00+08:00</published>
    <summary type="text">
      &lt;blockquote&gt;
&lt;p&gt;云的定义看似模糊，但本质上，它是一个用于描述全球服务器网络的术语，每个服务器都有一个独特的功能。云不是一个物理实体，而是一个庞大的全球远程服务器网络，它们连接在一起，旨在作为单一的生态系统运行。这些服务器设计用于存储和管理数据、运行应用程序，或者交付内容/服务（如视频短片、Web 邮件、办公室生产力软件或社交媒体）。不是从本地或个人计算机访问文件和数据，而是通过任何支持 Internet 的设备在线访问 - 这些信息在必要时随时随地可用。&lt;/p&gt;
&lt;/blockquote&gt;
    </summary>
  </entry>
  <entry>
    <title>汽车安全测试终极指南，第三篇（译文）</title>
    <link href="https://tttang.com/archive/1437/"/>
    <id>https://tttang.com/archive/1437/</id>
    <published>2022-03-08T12:00:00+08:00</published>
    <summary type="text">
      &lt;p&gt;在上两篇文章中，我们介绍了如何安装汽车模拟软件，以及进行安全测试所需的其他软硬件。在今天的文章中，我们将详细介绍安全测试过程。&lt;/p&gt;
&lt;p&gt;首先，我们将为大家介绍SavvyCAN，以及如何与ICSIM搭配使用。之后，我们将演示如何用SavvyCAN进行模糊测试，以及通过脚本控制SavvyCAN。&lt;/p&gt;
    </summary>
  </entry>
  <entry>
    <title>2021柏鹫杯 MISC4 APP深入逆向分析</title>
    <link href="https://tttang.com/archive/1459/"/>
    <id>https://tttang.com/archive/1459/</id>
    <published>2022-03-08T12:00:00+08:00</published>
    <summary type="text">
      
    </summary>
  </entry>
  <entry>
    <title>渗透测试工具 OWASP ZAP 的 RCE 反制</title>
    <link href="https://tttang.com/archive/1468/"/>
    <id>https://tttang.com/archive/1468/</id>
    <published>2022-03-07T12:00:00+08:00</published>
    <summary type="text">
      &lt;p&gt;OWASP Zed Attack Proxy 简称 ZAP，是一个开源的安全测试工具，功能和 Burpsuite 基本一样，它们同样使用 Java 语言编写，本人也曾有用过一段时间 ZAP，它完全可以替代 Burpsuite，不过也可能是由于先入为主的观念还是觉得 Burpsuite 用着更顺手。&lt;/p&gt;
&lt;p&gt;自从 2021.12 月的 log4j2 JNDI 漏洞出现，ZAP 官方也随之更新了关于 ZAP 受到 log4j2 漏洞影响的公告，详情参见&lt;a href=&quot;https://www.zaproxy.org/blog/2021-12-10-zap-and-log4shell/&quot; target=&quot;_blank&quot;&gt;ZAP and Log4Shell&lt;/a&gt;&lt;/p&gt;
    </summary>
  </entry>
  <entry>
    <title>Make JDBC Attacks Brilliant Again 番外篇</title>
    <link href="https://tttang.com/archive/1462/"/>
    <id>https://tttang.com/archive/1462/</id>
    <published>2022-03-04T12:00:00+08:00</published>
    <summary type="text">
      &lt;p&gt;我在HITB Singapore 2021上做过一次关于JDBC攻击面的分享，议题为《Make JDBC Attacks Brilliant Again》&lt;/p&gt;
&lt;p&gt;如果有兴趣可以看看，slide地址&lt;br&gt;
&lt;a href=&quot;https://conference.hitb.org/files/hitbsecconf2021sin/materials/D1T2%20-%20Make%20JDBC%20Attacks%20Brilliant%20Again%20-%20Xu%20Yuanzhen%20&amp;amp;%20Chen%20Hongkun.pdf&quot; target=&quot;_blank&quot;&gt;https://conference.hitb.org/files/hitbsecconf2021sin/materials/D1T2%20-%20Make%20JDBC%20Attacks%20Brilliant%20Again%20-%20Xu%20Yuanzhen%20&amp;amp;%20Chen%20Hongkun.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;去年的分享议题里没有涉及到PostgreSQL数据库，然而最近出现了PostgreSQL JDBC Driver的相关漏洞。特地做个总结，也算是《Make JDBC Attacks Brilliant Again》议题的番外篇&lt;/p&gt;
    </summary>
  </entry>

</feed>
