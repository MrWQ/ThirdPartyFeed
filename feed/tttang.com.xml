<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>跳跳糖 - 安全与分享社区</title>
  <link href="https://raw.githubusercontent.com/p7e4/ThirdPartyFeed/main/feed/tttang.com.xml" rel="self"/>
  <link href="https://tttang.com/"/>
  <updated>2022-03-06T06:15:42+08:00</updated>
  <id>https://tttang.com/</id>
  <entry>
    <title>Make JDBC Attacks Brilliant Again 番外篇</title>
    <link href="https://tttang.com/archive/1462/"/>
    <id>https://tttang.com/archive/1462/</id>
    <published>2022-03-04T12:00:00+08:00</published>
    <summary type="text">
      &lt;p&gt;我在HITB Singapore 2021上做过一次关于JDBC攻击面的分享，议题为《Make JDBC Attacks Brilliant Again》&lt;/p&gt;
&lt;p&gt;如果有兴趣可以看看，slide地址&lt;br&gt;
&lt;a href=&quot;https://conference.hitb.org/files/hitbsecconf2021sin/materials/D1T2%20-%20Make%20JDBC%20Attacks%20Brilliant%20Again%20-%20Xu%20Yuanzhen%20&amp;amp;%20Chen%20Hongkun.pdf&quot; target=&quot;_blank&quot;&gt;https://conference.hitb.org/files/hitbsecconf2021sin/materials/D1T2%20-%20Make%20JDBC%20Attacks%20Brilliant%20Again%20-%20Xu%20Yuanzhen%20&amp;amp;%20Chen%20Hongkun.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;去年的分享议题里没有涉及到PostgreSQL数据库，然而最近出现了PostgreSQL JDBC Driver的相关漏洞。特地做个总结，也算是《Make JDBC Attacks Brilliant Again》议题的番外篇&lt;/p&gt;
    </summary>
  </entry>
  <entry>
    <title>从TSJCTF &amp;amp; Codegate的两道crypto题中学习新姿势</title>
    <link href="https://tttang.com/archive/1458/"/>
    <id>https://tttang.com/archive/1458/</id>
    <published>2022-03-03T12:00:00+08:00</published>
    <summary type="text">
      &lt;p&gt;周末的时候参加了TSJCTF和codegate的比赛，感觉其中有两道题思路比较新颖，有一些新的知识值得学习，记录一下以便日后翻阅。&lt;/p&gt;
    </summary>
  </entry>
  <entry>
    <title>shiro反序列化漏洞攻击拓展面--修改key</title>
    <link href="https://tttang.com/archive/1457/"/>
    <id>https://tttang.com/archive/1457/</id>
    <published>2022-03-02T12:00:00+08:00</published>
    <summary type="text">
      &lt;p&gt;在这个shiro末年时代，攻防演练越来越难。对于传统红队队员提出了更高的一些要求，shiro最近的对于红蓝对抗中发挥了不可磨灭的价值。这里提出一些新奇的攻击手法针对shiro实战，提高红队队员的价值，以及让红蓝对抗更有意思一些。&lt;/p&gt;
    </summary>
  </entry>
  <entry>
    <title>SUSCTF</title>
    <link href="https://tttang.com/archive/1454/"/>
    <id>https://tttang.com/archive/1454/</id>
    <published>2022-03-01T12:00:00+08:00</published>
    <summary type="text">
      
    </summary>
  </entry>
  <entry>
    <title>如何使用机器账户进行域维权</title>
    <link href="https://tttang.com/archive/1448/"/>
    <id>https://tttang.com/archive/1448/</id>
    <published>2022-03-01T12:00:00+08:00</published>
    <summary type="text">
      &lt;p&gt;机器账户在许多技术中可以用于提权或横向移动，如使用机器账户的委派进行dcsyn了上述作用，使用机器账户也可进行维权操作。我们可以将任意计算机账户添加到高权限组(例如Domain Admin、Domain Controllers、Enterprise Admins) 或对计算机账户的userAccountControl属性进行修改。使用这两种方式，我们可以通过机器账户在域内进行身份认证（因为密码已知）并进行提权操作，例如Dcsync拖取域内hash。&lt;/p&gt;
    </summary>
  </entry>
  <entry>
    <title>SIM Hijacking（译文）</title>
    <link href="https://tttang.com/archive/1446/"/>
    <id>https://tttang.com/archive/1446/</id>
    <published>2022-02-28T12:00:00+08:00</published>
    <summary type="text">
      &lt;p&gt;近期，“5.33亿Facebook用户的电话号码遭泄露”之类的报道占据了各大社交网络的新闻头条。实际上，早在2020年，这些泄密信息就已经被黑客出售了；只是最近这些数据被免费发布到了一个黑客论坛上，其中包括用户的手机号码以及其他相关信息。这则消息甚至催生了像https://haveibeenzucked.com这样的网站，大家可以通过它们检查自己的Facebook数据是否已经泄露。另外，大家也可以通过https://haveibeenpwned.com检查相关泄露情况。&lt;/p&gt;
    </summary>
  </entry>
  <entry>
    <title>ASP.NET下的内存马(3) HttpListener内存马</title>
    <link href="https://tttang.com/archive/1451/"/>
    <id>https://tttang.com/archive/1451/</id>
    <published>2022-02-25T12:00:00+08:00</published>
    <summary type="text">
      &lt;p&gt;asp.net下的内存马研究文章比较少，目前提到过的包括虚拟路径内存马以及HttpListener内存马。最近研究了一下其他类型的内存马，发现.net可以利用的地方要多得多。所以准备写个系列文章，讲一讲asp.net下的内存马。&lt;/p&gt;
    </summary>
  </entry>
  <entry>
    <title>shellcode题目整理</title>
    <link href="https://tttang.com/archive/1447/"/>
    <id>https://tttang.com/archive/1447/</id>
    <published>2022-02-24T12:00:00+08:00</published>
    <summary type="text">
      &lt;p&gt;简单整理下shellcode类型的题目&lt;/p&gt;
    </summary>
  </entry>
  <entry>
    <title>VNCTF2022公开赛 Blockchain-VNloan</title>
    <link href="https://tttang.com/archive/1445/"/>
    <id>https://tttang.com/archive/1445/</id>
    <published>2022-02-23T12:00:00+08:00</published>
    <summary type="text">
      &lt;p&gt;基于 Uniswap V3 的 DeFi 流动性协议Visor Finance遭受黑客攻击，黑客利用重入漏洞耗尽了880万枚VISR代币，当时，VISR的交易价格约为0.93美元，总损失约为820万美元。&lt;/p&gt;
&lt;p&gt;因为call调用产生的漏洞还是比较多的，比如重入漏洞，atn代币增发事件等。&lt;/p&gt;
    </summary>
  </entry>
  <entry>
    <title>影子凭据（译文）</title>
    <link href="https://tttang.com/archive/1440/"/>
    <id>https://tttang.com/archive/1440/</id>
    <published>2022-02-22T12:00:00+08:00</published>
    <summary type="text">
      &lt;p&gt;在本文中，我们将为读者详细介绍与影子票据漏洞相关的事宜。&lt;/p&gt;
    </summary>
  </entry>
  <entry>
    <title>V8 沙箱绕过</title>
    <link href="https://tttang.com/archive/1443/"/>
    <id>https://tttang.com/archive/1443/</id>
    <published>2022-02-22T12:00:00+08:00</published>
    <summary type="text">
      &lt;p&gt;这是 DiceCTF2022 的一道题 memory hole。&lt;/p&gt;
&lt;p&gt;题目给了我们修改任意 array 的 length 的能力，按过往的经验，接下来很简单，就是构造任意地址读写原语，构造 WASM 实例，读 RWX 空间地址，写 shellcode ，调 WASM 函数，OK。&lt;/p&gt;
&lt;p&gt;但题目开启了 V8 沙箱，一个新的安全机制，直接阻止了我们构造任意地址读写原语，能访问的范围是 array 基址后连续的 4G 地址空间。&lt;/p&gt;
&lt;p&gt;绕过这个沙箱是本题的重点，看了两篇wp有所收获，所以整理了下绕过手法，未来可能会用到。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/Jayl1n/CTF-Writeup/blob/master/DiceCTF2022/memory-hole/1984.tar.gz&quot; target=&quot;_blank&quot;&gt;题目地址&lt;/a&gt;&lt;/p&gt;
    </summary>
  </entry>
  <entry>
    <title>一道有趣的CTF赛题-unicode引发的WebAssembly与js交互问题</title>
    <link href="https://tttang.com/archive/1434/"/>
    <id>https://tttang.com/archive/1434/</id>
    <published>2022-02-21T12:00:00+08:00</published>
    <summary type="text">
      &lt;p&gt;在前几天的DiceCTF里，遇到了一道关于WebAssembly的题目。解题时利用Unicode字符的转换问题，使前端js脚本与WebAssembly进行交互时出现异常，以达到XSS的效果。&lt;/p&gt;
&lt;p&gt;解题时也了解了一些关于&lt;code&gt;WebAssembly&lt;/code&gt;的知识，算是有所收获&lt;/p&gt;
    </summary>
  </entry>
  <entry>
    <title>我是如何利用环境变量注入执行任意命令</title>
    <link href="https://tttang.com/archive/1450/"/>
    <id>https://tttang.com/archive/1450/</id>
    <published>2022-02-20T12:00:00+08:00</published>
    <summary type="text">
      &lt;p&gt;本文讲述了在可以控制环境变量的情况下，我是如何劫持dash和bash的环境变量并执行任意命令的，并分享了多个可能导致劫持的环境变量。&lt;/p&gt;
    </summary>
  </entry>
  <entry>
    <title>ParadigmCTF JOP</title>
    <link href="https://tttang.com/archive/1444/"/>
    <id>https://tttang.com/archive/1444/</id>
    <published>2022-02-18T12:00:00+08:00</published>
    <summary type="text">
      &lt;blockquote&gt;
&lt;p&gt;考点就是JOP（Jump Oriented Programming&lt;a href=&quot;https://ctf-wiki.org/blockchain/ethereum/attacks/jump-oriented-programming/#jump-oriented-programming&quot; target=&quot;_blank&quot;&gt;¶&lt;/a&gt;），这种攻击方式首次应该是出现在RW 2019的决赛上，是首席提出的一种全新攻击方式。然后断断续续在qwb final和其他比赛中也出现过相关的赛题。相对来说是智能合约中较为复杂的一种利用方式。&lt;/p&gt;
&lt;/blockquote&gt;
    </summary>
  </entry>
  <entry>
    <title>JAVA 协议安全笔记-JNDI篇</title>
    <link href="https://tttang.com/archive/1441/"/>
    <id>https://tttang.com/archive/1441/</id>
    <published>2022-02-17T12:00:00+08:00</published>
    <summary type="text">
      &lt;p&gt;JNDI 全称为 &lt;code&gt;Java Naming and Directory Interface&lt;/code&gt; 也即JAVA 名称和目录接口&lt;/p&gt;
    </summary>
  </entry>

</feed>
