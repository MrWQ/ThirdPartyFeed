<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>跳跳糖 - 安全与分享社区</title>
  <link href="https://raw.githubusercontent.com/p7e4/ThirdPartyFeed/main/feed/tttang.com.xml" rel="self"/>
  <link href="https://tttang.com/"/>
  <updated>2022-03-28T18:23:37+08:00</updated>
  <id>https://tttang.com/</id>
  <entry>
    <title>Attacking Active Directory: 0 to 0.9（译文，上篇）</title>
    <link href="https://tttang.com/archive/1509/"/>
    <id>https://tttang.com/archive/1509/</id>
    <published>2022-03-28T12:00:00+08:00</published>
    <summary type="text">
      &lt;p&gt;本指南旨在从攻击者的角度考察Active Directory。为此，我们将回顾Active Directory的不同方面，以及所有渗透测试人员都应该掌握的术语，以更好地理解与Active Directory相关的网络攻击。为了理解Active Directory攻击技术，我认为重要的是：不仅要了解相关工具，还要了解这些工具的工作原理，所使用的协议/机制，以及这些机制/协议的设计初衷——当然，理解其他攻击技术时，道理也是一样的。这里提供的信息来开源社区以及自身使用Active Directory的经验。&lt;/p&gt;
    </summary>
  </entry>
  <entry>
    <title>针对CTFer的e与phi不互素的问题</title>
    <link href="https://tttang.com/archive/1504/"/>
    <id>https://tttang.com/archive/1504/</id>
    <published>2022-03-28T12:00:00+08:00</published>
    <summary type="text">
      &lt;p&gt;为什么说是针对CTFer的呢，本篇文章可能针对实用性强一点，针对算法的原理剖析会少一些。最后会总结出板子放在文章的结尾。&lt;/p&gt;
    </summary>
  </entry>
  <entry>
    <title>静态站点托管平台仅能托管静态资源？</title>
    <link href="https://tttang.com/archive/1501/"/>
    <id>https://tttang.com/archive/1501/</id>
    <published>2022-03-25T12:00:00+08:00</published>
    <summary type="text">
      &lt;p&gt;&lt;a href=&quot;https://4everland.org/&quot; target=&quot;_blank&quot;&gt;4everland&lt;/a&gt;、&lt;a href=&quot;https://vercel.com/&quot; target=&quot;_blank&quot;&gt;vercel&lt;/a&gt; 与 &lt;a href=&quot;https://app.netlify.com/&quot; target=&quot;_blank&quot;&gt;netlify&lt;/a&gt; 都是是非常不错的静态资源托管云平台，vercel 我用了有近一年的时间，4everland 才接触两天，由于 4everland 网站的功能问题才有了以下内容，随后也对其他的同类型平台进行了一次测试。&lt;/p&gt;
    </summary>
  </entry>
  <entry>
    <title>CodeQL 踩坑指南 - Java</title>
    <link href="https://tttang.com/archive/1497/"/>
    <id>https://tttang.com/archive/1497/</id>
    <published>2022-03-24T12:00:00+08:00</published>
    <summary type="text">
      &lt;p&gt;讲解这东西的大师傅们太多了，不班门弄斧了，这里仅针对一些踩过的坑点提供一些自己的解决方案，希望能对一些师傅提供点帮助。&lt;/p&gt;
    </summary>
  </entry>
  <entry>
    <title>Browser Exploitation on Windows - CVE-2019-0567, A Microsoft Edge Type Confusion Vulnerability (Part 1)（译文）</title>
    <link href="https://tttang.com/archive/1491/"/>
    <id>https://tttang.com/archive/1491/</id>
    <published>2022-03-23T12:00:00+08:00</published>
    <summary type="text">
      &lt;p&gt;浏览器的漏洞利用技术，已经困扰我相当一段时间了。不久前，我写了一篇文章，介绍了Internet Explorer旧版本中一个非常微不足道的UAF漏洞。这让我渴望了解更多，因为在这个案例中ASLR是不成问题的。此外，随着MEMGC的出现，DOM中的UAF漏洞实际上得到了缓解。其他的缓解措施，如控制流保护(CFG)，在这个案例中还没有提供。&lt;/p&gt;
    </summary>
  </entry>
  <entry>
    <title>ASP.NET下的内存马(4) VirtualPath内存马</title>
    <link href="https://tttang.com/archive/1488/"/>
    <id>https://tttang.com/archive/1488/</id>
    <published>2022-03-23T12:00:00+08:00</published>
    <summary type="text">
      &lt;p&gt;asp.net下的内存马研究文章比较少，目前提到过的包括虚拟路径内存马以及HttpListener内存马。最近研究了一下其他类型的内存马，发现.net可以利用的地方要多得多。所以准备写个系列文章，讲一讲asp.net下的内存马。&lt;/p&gt;
    </summary>
  </entry>
  <entry>
    <title>虎符初赛 writeup</title>
    <link href="https://tttang.com/archive/1492/"/>
    <id>https://tttang.com/archive/1492/</id>
    <published>2022-03-22T12:00:00+08:00</published>
    <summary type="text">
      
    </summary>
  </entry>
  <entry>
    <title>针对Exchange的攻击方式</title>
    <link href="https://tttang.com/archive/1487/"/>
    <id>https://tttang.com/archive/1487/</id>
    <published>2022-03-21T12:00:00+08:00</published>
    <summary type="text">
      
    </summary>
  </entry>
  <entry>
    <title>探索高版本 JDK 下 JNDI 漏洞的利用方法：第二章</title>
    <link href="https://tttang.com/archive/1489/"/>
    <id>https://tttang.com/archive/1489/</id>
    <published>2022-03-19T12:00:00+08:00</published>
    <summary type="text">
      &lt;p&gt;我在前段时间写过一篇《探索高版本 JDK 下 JNDI 漏洞的利用方法》，里面例举了几种可以用作 JNDI 漏洞在Tomcat7和非Tomcat时的利用方法。&lt;/p&gt;
&lt;p&gt;其中提到&lt;code&gt;NativeLibLoader&lt;/code&gt;能够实现 JNI 功能加载 so/dll/dylib 文件。&lt;/p&gt;
&lt;p&gt;但有几个前提条件。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;用户可以用某种方式写入一个文件内容开头可控的二进制文件&lt;/li&gt;
&lt;li&gt;这个文件名必须是以 so/dll/dylib 结尾&lt;/li&gt;
&lt;li&gt;必须知道这个文件的绝对路径&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这几个条件会使危害大打折扣，所以需要再找到一个写文件的工具类。&lt;/p&gt;
    </summary>
  </entry>
  <entry>
    <title>DeTT&amp;amp;CT : Mapping detection to MITRE ATT&amp;amp;CK（译文）</title>
    <link href="https://tttang.com/archive/1485/"/>
    <id>https://tttang.com/archive/1485/</id>
    <published>2022-03-18T12:00:00+08:00</published>
    <summary type="text">
      &lt;p&gt;入侵检测是一项非常复杂的任务，尤其是在数据量与日俱增的情况下。跟踪这些数据源及其适当的检测规则，或避免重复的检测规则，对于检测工程师来说是一项艰巨的任务。&lt;/p&gt;
&lt;p&gt;对于SOC来说，最重要的是要对其实际能见度和检测覆盖率有一个良好的概述和清晰的理解，以便找出差距，确定新检测规则或新数据源的开发优先级。&lt;/p&gt;
    </summary>
  </entry>
  <entry>
    <title>Docker又爆出高危逃逸漏洞了？仔细研究下事情没那么简单</title>
    <link href="https://tttang.com/archive/1484/"/>
    <id>https://tttang.com/archive/1484/</id>
    <published>2022-03-17T12:00:00+08:00</published>
    <summary type="text">
      &lt;p&gt;从2019年关注的第一个容器逃逸类型的漏洞写出&lt;a href=&quot;https://mp.weixin.qq.com/s/Ttm6RtVfZz-R82AjcwhOLQ&quot; target=&quot;_blank&quot;&gt;CVE-2019-5736 runc容器逃逸漏洞分析&lt;/a&gt;后，我对容器类漏洞的敏感度一直没有降低，并且非常碎片的学习容器和云原生相关的各种原理性知识，笔记记了一大堆，乱七八糟，不成体系。&lt;/p&gt;
    </summary>
  </entry>
  <entry>
    <title>深入理解进程线程</title>
    <link href="https://tttang.com/archive/1483/"/>
    <id>https://tttang.com/archive/1483/</id>
    <published>2022-03-16T12:00:00+08:00</published>
    <summary type="text">
      
    </summary>
  </entry>
  <entry>
    <title>CVE-2022-0847 Linux内核漏洞简要分析</title>
    <link href="https://tttang.com/archive/1480/"/>
    <id>https://tttang.com/archive/1480/</id>
    <published>2022-03-15T12:00:00+08:00</published>
    <summary type="text">
      &lt;p&gt;2022年03月07日，国外安全研究员披露了一个Linux内核本地提权漏洞CVE-2022-0847，命名为“Dirtypipe”。攻击者通过利用此漏洞可进行任意可读文件重写，将普通权限用户提升到root权限。目前网上已有公开的漏洞利用工具PoC，但目前还未有对容器环境影响分析，于是就有了这篇文章。&lt;/p&gt;
    </summary>
  </entry>
  <entry>
    <title>CIS Controls VERSION 8 Acknowledgments</title>
    <link href="https://tttang.com/archive/1474/"/>
    <id>https://tttang.com/archive/1474/</id>
    <published>2022-03-15T12:00:00+08:00</published>
    <summary type="text">
      &lt;p&gt;CIS Controls®最初是一个简单的项目，旨在确定每天影响企业现实中最常见和最重要的网络攻击，将这些知识和经验转化为如何防御的行动，然后与更多人分享这些信息。最初的目标是帮助企业采取最重要的措施来保护自己免受真正重要的攻击。&lt;/p&gt;
&lt;p&gt;在互联网安全中心（CIS®）的领导下，CIS控制措施已经成熟，成为一个由志愿者个人和机构组成的国际社区。&lt;/p&gt;
&lt;p&gt;- 分享对攻击和攻击者的观察，并将其转化为防御行动&lt;/p&gt;
&lt;p&gt;- 创建和分享工具、工作辅助工具、以及采用和解决问题的案例&lt;/p&gt;
&lt;p&gt;- 将CIS Controls措施与监管和合规性框架相联系，以确保其一致性。&lt;/p&gt;
&lt;p&gt;- 识别共同的问题和障碍（如初步评估和实施路线图），并作为一个社区解决这些问题。&lt;/p&gt;
    </summary>
  </entry>
  <entry>
    <title>susctf2022 mujs利用</title>
    <link href="https://tttang.com/archive/1463/"/>
    <id>https://tttang.com/archive/1463/</id>
    <published>2022-03-14T12:00:00+08:00</published>
    <summary type="text">
      
    </summary>
  </entry>

</feed>
