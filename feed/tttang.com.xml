<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>跳跳糖 - 安全与分享社区</title>
  <link href="https://raw.githubusercontent.com/p7e4/ThirdPartyFeed/main/feed/tttang.com.xml" rel="self"/>
  <link href="https://tttang.com/"/>
  <updated>2022-04-13T12:22:59+08:00</updated>
  <id>https://tttang.com/</id>
  <entry>
    <title>How I hacked an ESA&amp;#x27;s experimental satellite（译文）</title>
    <link href="https://tttang.com/archive/1542/"/>
    <id>https://tttang.com/archive/1542/</id>
    <published>2022-04-13T12:00:00+08:00</published>
    <summary type="text">
      &lt;p&gt;&lt;strong&gt;Hacking satellite&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;这两个字，听起来真的令人印象深刻。至少对我来说是这样。&lt;/p&gt;
&lt;p&gt;这是黑客文化中的一个梦想，经常出现在关于间谍/黑客题材的电视剧/电影中，藉此可以“重定向卫星”，以便从轨道上更好地观察敌人的行动。&lt;/p&gt;
&lt;p&gt;从小时候起，我就一直梦想着获得这样的技能：黑掉一些你看不到它们，但它们却能看到你的东西。由于卫星能够赋予用户强大的力量，所以，它自然是国家防御中最关键的系统之一，因此，卫星应该很难被黑客侵入的。&lt;/p&gt;
    </summary>
  </entry>
  <entry>
    <title>ByteCodeDL原理篇之手把手教你实现污点分析</title>
    <link href="https://tttang.com/archive/1541/"/>
    <id>https://tttang.com/archive/1541/</id>
    <published>2022-04-12T12:00:00+08:00</published>
    <summary type="text">
      &lt;p&gt;本文主要是根据&lt;a href=&quot;https://yanniss.github.io/ptaint-oopsla17-prelim.pdf&quot; target=&quot;_blank&quot;&gt;ptaint&lt;/a&gt;这篇论文的思想：将指针分析和污点分析统一起来进行分析，实现ByteCodeDL的污点分析功能，在阅读本文之前建议先学习下面三份资料&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://yanniss.github.io/ptaint-oopsla17-prelim.pdf&quot; target=&quot;_blank&quot;&gt;https://yanniss.github.io/ptaint-oopsla17-prelim.pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=IA08d-kiCy8&quot; target=&quot;_blank&quot;&gt;https://www.youtube.com/watch?v=IA08d-kiCy8&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://pascal-group.bitbucket.io/lectures/Security.pdf&quot; target=&quot;_blank&quot;&gt;https://pascal-group.bitbucket.io/lectures/Security.pdf&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
    </summary>
  </entry>
  <entry>
    <title>从零开始，分析Spring Framework RCE</title>
    <link href="https://tttang.com/archive/1532/"/>
    <id>https://tttang.com/archive/1532/</id>
    <published>2022-04-11T12:00:00+08:00</published>
    <summary type="text">
      &lt;p&gt;如果需要让你对一套CMS的安全性进行研究分析，你会从哪里入手？&lt;/p&gt;
&lt;p&gt;或许你会回答代码审计的那一套知识点。&lt;/p&gt;
&lt;p&gt;那么，如果需要让你要对 Spring Framework 框架的安全性进行研究分析，你会从哪里入手？&lt;/p&gt;
&lt;p&gt;更宽泛一点，如果需要让你对一个大型的开源组件的安全性进行研究分析，你会从哪里入手？&lt;/p&gt;
    </summary>
  </entry>
  <entry>
    <title>Attacking Active Directory: 0 to 0.9（译文，下篇）</title>
    <link href="https://tttang.com/archive/1526/"/>
    <id>https://tttang.com/archive/1526/</id>
    <published>2022-04-08T12:00:00+08:00</published>
    <summary type="text">
      &lt;p&gt;在本文中，我们将继续为读者介绍与Active Directory相关的攻防知识。&lt;/p&gt;
    </summary>
  </entry>
  <entry>
    <title>Linux下无文件Java agent探究</title>
    <link href="https://tttang.com/archive/1525/"/>
    <id>https://tttang.com/archive/1525/</id>
    <published>2022-04-07T12:00:00+08:00</published>
    <summary type="text">
      &lt;p&gt;最近学习了两篇关于Java内存攻击的文章：&lt;br&gt;
&lt;a href=&quot;https://xz.aliyun.com/t/10075&quot; target=&quot;_blank&quot;&gt;Java内存攻击技术漫谈&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://xz.aliyun.com/t/10186&quot; target=&quot;_blank&quot;&gt;Linux下内存马进阶植入技术&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;其中我对无文件的Java agent技术挺感兴趣。于是乎花了点时间从头学习了一波，尤其是游望之师傅在Linux下植入无文件java agent的技术。本文将会对这个技术再进行一个梳理。但因我二进制的基础比较薄弱，所以本文在说明Linux下无文件Java Agent时，也会较详细的说明一些二进制相关的基础。希望能帮助同样二进制基础薄弱的同学学习和理解，二进制还是很有趣哒。&lt;/p&gt;
    </summary>
  </entry>
  <entry>
    <title>源码层面梳理Java RMI交互流程</title>
    <link href="https://tttang.com/archive/1530/"/>
    <id>https://tttang.com/archive/1530/</id>
    <published>2022-04-06T12:00:00+08:00</published>
    <summary type="text">
      &lt;p&gt;RMI(Remote Method Invocation)是Java语言执行远程方法调用的Java API，相当于面向对象的远程过程调用（RPC），支持直接传输序列化的Java类和分布式垃圾回收。&lt;/p&gt;
    </summary>
  </entry>
  <entry>
    <title>使用codeql自动挖掘Java反序列化gadget</title>
    <link href="https://tttang.com/archive/1511/"/>
    <id>https://tttang.com/archive/1511/</id>
    <published>2022-04-02T12:00:00+08:00</published>
    <summary type="text">
      &lt;p&gt;前两天看到一篇老外写的用codeql挖掘Java反序列化gadget的文章 &lt;a href=&quot;https://www.synacktiv.com/en/publications/finding-gadgets-like-its-2022.html&quot; target=&quot;_blank&quot;&gt;https://www.synacktiv.com/en/publications/finding-gadgets-like-its-2022.html&lt;/a&gt;，虽然显示的效果还可以，但用了种比较土味的半自动化半人工的方式。直觉上感觉codeql用法应该不会这么呆，于是研究了下，有了这篇文章。&lt;/p&gt;
    </summary>
  </entry>
  <entry>
    <title>Java反序列化注入冰蝎内存马相关踩坑笔记</title>
    <link href="https://tttang.com/archive/1513/"/>
    <id>https://tttang.com/archive/1513/</id>
    <published>2022-04-01T12:00:00+08:00</published>
    <summary type="text">
      &lt;p&gt;朋友叫帮忙打一个内存马进去，用的是cb链，无cc依赖，我寻思这不是有手就行吗，谁知道接下来遇到了无数的坑。&lt;/p&gt;
    </summary>
  </entry>
  <entry>
    <title>ByteCodeDL小试牛刀之CHA调用图分析</title>
    <link href="https://tttang.com/archive/1510/"/>
    <id>https://tttang.com/archive/1510/</id>
    <published>2022-03-31T12:00:00+08:00</published>
    <summary type="text">
      &lt;p&gt;本文将分享如何用 &lt;a href=&quot;https://github.com/BytecodeDL/ByteCodeDL&quot; target=&quot;_blank&quot;&gt;ByteCodeDL&lt;/a&gt; 的 CHA 调用图分析功能，解决两个CTF题目。&lt;/p&gt;
    </summary>
  </entry>
  <entry>
    <title>CodeQL 提升篇之路由收集</title>
    <link href="https://tttang.com/archive/1512/"/>
    <id>https://tttang.com/archive/1512/</id>
    <published>2022-03-30T12:00:00+08:00</published>
    <summary type="text">
      &lt;p&gt;在上篇文章&lt;a href=&quot;https://tttang.com/archive/1415/&quot; target=&quot;_blank&quot;&gt;CodeQL 提升篇&lt;/a&gt;介绍了CodeQL的更多细节内容，而本篇带来的是如何使用CodeQL来获取应用的路由信息（目前适用SpringMVC）。&lt;br&gt;
对于实现这块的想法来源主要是阅读了xsser和楼兰的文章(相关文章链接在本文末尾)，目前已将功能实现并考虑了更多可能出现的场景，尽量做到可以获取正确请求内容。&lt;/p&gt;
    </summary>
  </entry>
  <entry>
    <title>通过afl-training学习afl</title>
    <link href="https://tttang.com/archive/1508/"/>
    <id>https://tttang.com/archive/1508/</id>
    <published>2022-03-29T12:00:00+08:00</published>
    <summary type="text">
      &lt;p&gt;跟着&lt;a href=&quot;https://github.com/mykter/afl-training&quot; target=&quot;_blank&quot;&gt;afl-training&lt;/a&gt;学习&lt;code&gt;afl&lt;/code&gt;&lt;/p&gt;
    </summary>
  </entry>
  <entry>
    <title>Attacking Active Directory: 0 to 0.9（译文，上篇）</title>
    <link href="https://tttang.com/archive/1509/"/>
    <id>https://tttang.com/archive/1509/</id>
    <published>2022-03-28T12:00:00+08:00</published>
    <summary type="text">
      &lt;p&gt;本指南旨在从攻击者的角度考察Active Directory。为此，我们将回顾Active Directory的不同方面，以及所有渗透测试人员都应该掌握的术语，以更好地理解与Active Directory相关的网络攻击。为了理解Active Directory攻击技术，我认为重要的是：不仅要了解相关工具，还要了解这些工具的工作原理，所使用的协议/机制，以及这些机制/协议的设计初衷——当然，理解其他攻击技术时，道理也是一样的。这里提供的信息来开源社区以及自身使用Active Directory的经验。&lt;/p&gt;
    </summary>
  </entry>
  <entry>
    <title>针对CTFer的e与phi不互素的问题</title>
    <link href="https://tttang.com/archive/1504/"/>
    <id>https://tttang.com/archive/1504/</id>
    <published>2022-03-28T12:00:00+08:00</published>
    <summary type="text">
      &lt;p&gt;为什么说是针对CTFer的呢，本篇文章可能针对实用性强一点，针对算法的原理剖析会少一些。最后会总结出板子放在文章的结尾。&lt;/p&gt;
    </summary>
  </entry>
  <entry>
    <title>静态站点托管平台仅能托管静态资源？</title>
    <link href="https://tttang.com/archive/1501/"/>
    <id>https://tttang.com/archive/1501/</id>
    <published>2022-03-25T12:00:00+08:00</published>
    <summary type="text">
      &lt;p&gt;&lt;a href=&quot;https://4everland.org/&quot; target=&quot;_blank&quot;&gt;4everland&lt;/a&gt;、&lt;a href=&quot;https://vercel.com/&quot; target=&quot;_blank&quot;&gt;vercel&lt;/a&gt; 与 &lt;a href=&quot;https://app.netlify.com/&quot; target=&quot;_blank&quot;&gt;netlify&lt;/a&gt; 都是是非常不错的静态资源托管云平台，vercel 我用了有近一年的时间，4everland 才接触两天，由于 4everland 网站的功能问题才有了以下内容，随后也对其他的同类型平台进行了一次测试。&lt;/p&gt;
    </summary>
  </entry>
  <entry>
    <title>CodeQL 踩坑指南 - Java</title>
    <link href="https://tttang.com/archive/1497/"/>
    <id>https://tttang.com/archive/1497/</id>
    <published>2022-03-24T12:00:00+08:00</published>
    <summary type="text">
      &lt;p&gt;讲解这东西的大师傅们太多了，不班门弄斧了，这里仅针对一些踩过的坑点提供一些自己的解决方案，希望能对一些师傅提供点帮助。&lt;/p&gt;
    </summary>
  </entry>

</feed>
