<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title type="text">跳跳糖 - 安全与分享社区</title>
  <link href="https://raw.githubusercontent.com/p7e4/ThirdPartyFeed/main/feed/tttang.com.xml" rel="self"/>
  <link rel="alternate" href="https://tttang.com/"/>
  <updated>2022-07-11T12:37:27+08:00</updated>
  <id>https://tttang.com/</id>
  <entry>
    <title type="text">从CICD漏洞靶场中学习持续集成安全</title>
    <link rel="alternate" type="text/html" href="https://tttang.com/archive/1650/"/>
    <id>https://tttang.com/archive/1650/</id>
    <published>2022-07-11T12:00:00+08:00</published>
    <summary type="text">
      &lt;p&gt;漏洞靶场地址：&lt;a href=&quot;https://github.com/cider-security-research/cicd-goat&quot; target=&quot;_blank&quot;&gt;https://github.com/cider-security-research/cicd-goat&lt;/a&gt;&lt;/p&gt;
    </summary>
  </entry>
  <entry>
    <title type="text">从一文中了解SSRF的各种绕过姿势及攻击思路</title>
    <link rel="alternate" type="text/html" href="https://tttang.com/archive/1648/"/>
    <id>https://tttang.com/archive/1648/</id>
    <published>2022-07-08T12:00:00+08:00</published>
    <summary type="text">
      &lt;p&gt;SSRF之前只有简单了解，进行二次学习后简单总结一下，希望能对正在学习SSRF的师傅们有所帮助&lt;/p&gt;
    </summary>
  </entry>
  <entry>
    <title type="text">2022虎符_vdq(rust_cve)详解</title>
    <link rel="alternate" type="text/html" href="https://tttang.com/archive/1585/"/>
    <id>https://tttang.com/archive/1585/</id>
    <published>2022-07-07T12:00:00+08:00</published>
    <summary type="text">
      &lt;p&gt;这题是 GLIBC 2.27-3ubuntu1.5 的版本，想着 2.27 可以直接 free 两次，但是这个 2.27-3ubuntu1.5 patch 了 double free，还加了 key，double_free 就没那么好搞，所以这题我用的是任意写 free_hook 为 system 进行getshell&lt;/p&gt;
    </summary>
  </entry>
  <entry>
    <title type="text">神奇的 C++ 模板 —— 2022-ACTF-Nagi-Knows Writeup</title>
    <link rel="alternate" type="text/html" href="https://tttang.com/archive/1643/"/>
    <id>https://tttang.com/archive/1643/</id>
    <published>2022-07-06T12:00:00+08:00</published>
    <summary type="text">
      &lt;p&gt;很新颖的一道题目，比赛时花了将近一整天的时间做了出来（没抢到血 qaq，带哥们太猛了）。虽然 XCTF 的分站赛主办方都会公布 writeup，但还是很想记录并顺手分享一下我自己在解这道题目时的整个思考过程。尤其是这几年 CTF 中逆向方向其实已经把&lt;/p&gt;
    </summary>
  </entry>
  <entry>
    <title type="text">使用tabby分析Spring Data MongoDB SpEL漏洞</title>
    <link rel="alternate" type="text/html" href="https://tttang.com/archive/1647/"/>
    <id>https://tttang.com/archive/1647/</id>
    <published>2022-07-05T12:00:00+08:00</published>
    <summary type="text">
      &lt;p&gt;最近学习了一款非常优秀的Java语言静态代码分析工具：&lt;a href=&quot;https://github.com/wh1t3p1g/tabby&quot; target=&quot;_blank&quot;&gt;tabby&lt;/a&gt;。正好近期出了个Spring Data MongoDB的SpEL表达式注入。便想着使用tabby对这个组件进行分析，一来熟悉熟悉tabby的使用，二来想感受一下这款静态代码分析工具对于代码审计的助力。&lt;/p&gt;
    </summary>
  </entry>
  <entry>
    <title type="text">WMI检测思路与实现</title>
    <link rel="alternate" type="text/html" href="https://tttang.com/archive/1639/"/>
    <id>https://tttang.com/archive/1639/</id>
    <published>2022-07-04T12:00:00+08:00</published>
    <summary type="text">
      &lt;p&gt;在《WMI攻守之道》中，我们通过分析WMI产生的流量数据了解到WMI通过DCE/RPC协议进行通信，这个协议主要由DCOM远程激活机制和NTLM身份认证。DCOM远程激活是WMI远程连接的必要步骤，所以可以通过检测DCOM远程激活，进而检测WMI连接。&lt;/p&gt;
    </summary>
  </entry>
  <entry>
    <title type="text">Shiro 历史漏洞分析</title>
    <link rel="alternate" type="text/html" href="https://tttang.com/archive/1645/"/>
    <id>https://tttang.com/archive/1645/</id>
    <published>2022-07-01T12:00:00+08:00</published>
    <summary type="text">
      &lt;p&gt;&lt;a href=&quot;https://shiro.apache.org/&quot; target=&quot;_blank&quot;&gt;Apache Shiro&lt;/a&gt; is a powerful and easy-to-use Java security framework that performs authentication(身份验证), authorization(授权), cryptography(加密), and session management(会话管理). With Shiro’s easy-to-understand API, you can quickly and easily secure any application – from the smallest mobile applications to the largest web and enterprise applications.&lt;/p&gt;
    </summary>
  </entry>
  <entry>
    <title type="text">XCTF-ACTF 部分区块链题目</title>
    <link rel="alternate" type="text/html" href="https://tttang.com/archive/1637/"/>
    <id>https://tttang.com/archive/1637/</id>
    <published>2022-06-30T12:00:00+08:00</published>
    <summary type="text">
      
    </summary>
  </entry>
  <entry>
    <title type="text">浅谈pyd文件逆向</title>
    <link rel="alternate" type="text/html" href="https://tttang.com/archive/1641/"/>
    <id>https://tttang.com/archive/1641/</id>
    <published>2022-06-29T12:00:00+08:00</published>
    <summary type="text">
      &lt;p&gt;&lt;code&gt;.pyd&lt;/code&gt; 文件本质上是一个包含 Python 代码的库文件，可以被其他 Python 应用程序调用和使用。 通过使用Cython编译器，可以快速得把python文件打包为一个动态链接库，这个动态链接库也就是&lt;code&gt;pyd&lt;/code&gt;。&lt;code&gt;pyd&lt;/code&gt;相较于python源码本身可读性大大下降，很多人处于类似混淆得目的，也会使用这种形式对python代码进行保护&lt;/p&gt;
    </summary>
  </entry>
  <entry>
    <title type="text">DCSync 技术的攻击和检测</title>
    <link rel="alternate" type="text/html" href="https://tttang.com/archive/1634/"/>
    <id>https://tttang.com/archive/1634/</id>
    <published>2022-06-28T12:00:00+08:00</published>
    <summary type="text">
      &lt;p&gt;在DCSync技术没有出现之前，攻击者要想拿到域内用户的hash，就只能在域控制器上运行 Mimikatz 或 Invoke-Mimikatz去抓取密码hash，但是在2015 年 8 月份， Mimkatz新增了一个主要功能叫&quot;DCSync&quot;，使用这项技术可以有效地 &quot;模拟&quot; 域控制器并从目标域控上请求域内用户密码hash。这项技术为当下域渗透提供了极大地便利，可以直接远程dump域内hash，另外也衍生出很多的攻击方式，所以我想专门做一项DCSync技术的专题。&lt;/p&gt;
    </summary>
  </entry>
  <entry>
    <title type="text">CobaltStrike Beacon生成原理分析</title>
    <link rel="alternate" type="text/html" href="https://tttang.com/archive/1631/"/>
    <id>https://tttang.com/archive/1631/</id>
    <published>2022-06-27T12:00:00+08:00</published>
    <summary type="text">
      &lt;p&gt;学习beacon生成和调试分析和检测beacon的过程中的一些记录。&lt;/p&gt;
    </summary>
  </entry>
  <entry>
    <title type="text">虚拟机逃逸初探----2018rwctf_station-escape</title>
    <link rel="alternate" type="text/html" href="https://tttang.com/archive/1629/"/>
    <id>https://tttang.com/archive/1629/</id>
    <published>2022-06-24T12:00:00+08:00</published>
    <summary type="text">
      &lt;blockquote&gt;
&lt;p&gt;这里的rwctf_station-escape的主要基于&lt;a href=&quot;https://zhuanlan.zhihu.com/p/52140921&quot; target=&quot;_blank&quot;&gt;长亭师傅&lt;/a&gt;在知乎的文章进行，在此基础上进行了比较详细的exp分析和调试&lt;/p&gt;
&lt;/blockquote&gt;
    </summary>
  </entry>
  <entry>
    <title type="text">CVE-2022-23222漏洞及利用分析</title>
    <link rel="alternate" type="text/html" href="https://tttang.com/archive/1628/"/>
    <id>https://tttang.com/archive/1628/</id>
    <published>2022-06-23T12:00:00+08:00</published>
    <summary type="text">
      &lt;p&gt;2022年1月14日，一个编号为CVE-2022-23222的漏洞被公开，这是一个位于eBPF验证器中的漏洞，漏洞允许eBPF程序在未经验证的情况下对特定指针进行运算，通过精心构造的代码，可以实现任意内核内存读写，而这将会造成本地提权的风险。&lt;/p&gt;
    </summary>
  </entry>
  <entry>
    <title type="text">Mimikatz详细使用总结</title>
    <link rel="alternate" type="text/html" href="https://tttang.com/archive/1616/"/>
    <id>https://tttang.com/archive/1616/</id>
    <published>2022-06-22T12:00:00+08:00</published>
    <summary type="text">
      
    </summary>
  </entry>
  <entry>
    <title type="text">Java安全笔记-JNI 详解</title>
    <link rel="alternate" type="text/html" href="https://tttang.com/archive/1622/"/>
    <id>https://tttang.com/archive/1622/</id>
    <published>2022-06-21T12:00:00+08:00</published>
    <summary type="text">
      &lt;p&gt;JNI (&lt;code&gt;Java Native Interface&lt;/code&gt;，JAVA 本地接口) 允许 Java 代码和其它编程语言编写的代码进行交互，主要为Java和Native层（C/C++）相互调用的接口规范，但是并不妨碍扩展其他语言。 JNI 在 Java1.1 中正式推出，在 Java1.2 中加入了&lt;code&gt;JNI_OnLoad&lt;/code&gt;和&lt;code&gt;JNI_OnUnload&lt;/code&gt;方法。&lt;/p&gt;
    </summary>
  </entry>

</feed>
